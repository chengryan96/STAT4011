library(ggplot2)
set.seed(4011)
file_path = "C:/Users/cheng/OneDrive/Desktop/hw/STAT4011/STAT4011/dataset"
case =  read.csv(paste0(file_path, '/Time.csv'))
policy = read.csv(paste0(file_path, '/Policy.csv'))
search_trend = read.csv(paste0(file_path, '/SearchTrend.csv'))
province = read.csv(paste0(file_path, '/TimeProvince.csv'), stringsAsFactors = FALSE)
weather = read.csv(paste0(file_path, '/Weather.csv'), stringsAsFactors = FALSE)
case_policy_df = merge(case, policy, by.x='date', by.y='start_date', all = TRUE)[-1,]
case_policy_search = merge(case_policy_df, search_trend, by.x='date', by.y='date')
df = case_policy_search
df$policy_id = as.numeric(df$policy_id)
df$date = as.Date(df$date)
for (i in 1:nrow(df)){
if (is.na(df$policy_id[i])) df$policy_id[i] = 0
if(df$policy_id[i] > 0) {
df$policy_id[i] = 1
} else {
df$policy_id[i] = 0
}
}
#plot the graph
ggplot() +
geom_line(data = df, aes(x = date, y = confirmed, color = 'confirmed')) +
geom_line(data = df, aes(x = date, y = released, color = 'released'))+
geom_point(data = df, aes(x = date, y = policy_id, color = 'government applied policy'), size = 0.01) +
ylab('')
# plot search trend
ggplot() +
geom_line(data = df, aes(x = date, y = coronavirus, color = 'ppl search for coronavirus'))
ggplot() +
geom_line(data = df, aes(x = date, y = flu, color = 'ppl search for flu'))
corr_df = as.data.frame(cbind(df$confirmed, df$coronavirus, df$flu, df$policy_id))
colnames(corr_df) = c('confirmed', 'keyword_covid19', 'keyword_flu', 'gov_policy')
corr = cor(corr_df)
province$province = as.factor(province$province)
province_list = split(province, province$province)
province_df = as.data.frame(province_list)
pro_df = cbind(province_df$Busan.date,
province_df$Busan.confirmed,
province_df$Chungcheongbuk.do.confirmed,
province_df$Chungcheongnam.do.confirmed,
province_df$Daegu.confirmed,
province_df$Daejeon.confirmed,
province_df$Gangwon.do.confirmed,
province_df$Gwangju.confirmed,
province_df$Gyeonggi.do.confirmed,
province_df$Gyeongsangbuk.do.confirmed,
province_df$Gyeongsangnam.do.confirmed,
province_df$Incheon.confirmed,
province_df$Jeju.do.confirmed,
province_df$Jeollabuk.do.confirmed,
province_df$Jeollanam.do.confirmed,
province_df$Sejong.confirmed,
province_df$Seoul.confirmed,
province_df$Ulsan.confirmed)
temp = as.data.frame(apply(pro_df[,2:ncol(pro_df)], 2, as.numeric))
colnames(temp) = c('Busan', 'Chungcheongbuk', 'Chungcheongnam', 'Daegu', 'Daejeon', 'Gangwon','Gwangju', 'Gyeonggi', 'Gyeongsangbuk', 'Gyeongsangnam', 'Incheon', 'Jeju', 'Jeollabuk', 'Jeollanam', 'Sejong', 'Seoul', 'Ulsan')
pro_df = data.frame(province_df$Busan.date, temp)
colnames(pro_df)[1] = 'date'
#convert datetime
pro_df[,1] = anytime::anydate(pro_df[,1])
normalize <- function(x)
{
return((x- min(x)) /(max(x)-min(x)))
}
pro_stand_df = apply(pro_df[,2:ncol(pro_df)], 2, normalize)
pro_stand_df = data.frame(pro_df[,1], pro_stand_df)
pro_stand_df[,1] = anytime::anydate(pro_stand_df[,1])
colnames(pro_stand_df)[1] = 'date'
df = pro_stand_df
ggplot() +
geom_line(data = df, aes(x = date, y = Busan, color = 'Busan')) +
geom_line(data = df, aes(x = date, y = Chungcheongbuk, color = 'Chungcheongbuk'))+
geom_line(data = df, aes(x = date, y = Chungcheongnam, color = 'Chungcheongnam'))+
geom_line(data = df, aes(x = date, y = Daegu, color = 'Daegu'))+
geom_line(data = df, aes(x = date, y = Daejeon, color = 'Daejeon'))+
geom_line(data = df, aes(x = date, y = Gangwon, color = 'Gangwon'))+
geom_line(data = df, aes(x = date, y = Gwangju, color = 'Gwangju'))+
geom_line(data = df, aes(x = date, y = Gyeonggi, color = 'Gyeonggi'))+
geom_line(data = df, aes(x = date, y = Gyeongsangbuk, color = 'Gyeongsangbuk'))+
geom_line(data = df, aes(x = date, y = Gyeongsangnam, color = 'Gyeongsangnam'))+
geom_line(data = df, aes(x = date, y = Incheon, color = 'Incheon'))+
geom_line(data = df, aes(x = date, y = Jeju, color = 'Jeju'))+
geom_line(data = df, aes(x = date, y = Jeollabuk, color = 'Jeollabuk'))+
geom_line(data = df, aes(x = date, y = Jeollanam, color = 'Jeollanam'))+
geom_line(data = df, aes(x = date, y = Sejong, color = 'Sejong'))+
geom_line(data = df, aes(x = date, y = Seoul, color = 'Seoul'))+
geom_line(data = df, aes(x = date, y = Ulsan, color = 'Jeollabuk'))+
ylab('')
ggplot() +
geom_line(data = df, aes(x = date, y = Seoul, color = 'Seoul'))
View(pro_df)
View(case)
View(pro_df)
View(province_df)
normalize <- function(x)
{
return((x- mean(x)) /sd(x))
}
pro_stand_df = apply(pro_df[,2:ncol(pro_df)], 2, normalize)
pro_stand_df = data.frame(pro_df[,1], pro_stand_df)
pro_stand_df[,1] = anytime::anydate(pro_stand_df[,1])
colnames(pro_stand_df)[1] = 'date'
df = pro_stand_df
ggplot() +
geom_line(data = df, aes(x = date, y = Busan, color = 'Busan')) +
geom_line(data = df, aes(x = date, y = Chungcheongbuk, color = 'Chungcheongbuk'))+
geom_line(data = df, aes(x = date, y = Chungcheongnam, color = 'Chungcheongnam'))+
geom_line(data = df, aes(x = date, y = Daegu, color = 'Daegu'))+
geom_line(data = df, aes(x = date, y = Daejeon, color = 'Daejeon'))+
geom_line(data = df, aes(x = date, y = Gangwon, color = 'Gangwon'))+
geom_line(data = df, aes(x = date, y = Gwangju, color = 'Gwangju'))+
geom_line(data = df, aes(x = date, y = Gyeonggi, color = 'Gyeonggi'))+
geom_line(data = df, aes(x = date, y = Gyeongsangbuk, color = 'Gyeongsangbuk'))+
geom_line(data = df, aes(x = date, y = Gyeongsangnam, color = 'Gyeongsangnam'))+
geom_line(data = df, aes(x = date, y = Incheon, color = 'Incheon'))+
geom_line(data = df, aes(x = date, y = Jeju, color = 'Jeju'))+
geom_line(data = df, aes(x = date, y = Jeollabuk, color = 'Jeollabuk'))+
geom_line(data = df, aes(x = date, y = Jeollanam, color = 'Jeollanam'))+
geom_line(data = df, aes(x = date, y = Sejong, color = 'Sejong'))+
geom_line(data = df, aes(x = date, y = Seoul, color = 'Seoul'))+
geom_line(data = df, aes(x = date, y = Ulsan, color = 'Jeollabuk'))+
ylab('')
ggplot() +
geom_line(data = df, aes(x = date, y = Seoul, color = 'Seoul'))
View(weather)
set.seed(4011)
file_path = "C:/Users/cheng/OneDrive/Desktop/hw/STAT4011/STAT4011/dataset"
case =  read.csv(paste0(file_path, '/Time.csv'))
policy = read.csv(paste0(file_path, '/Policy.csv'))
search_trend = read.csv(paste0(file_path, '/SearchTrend.csv'))
province = read.csv(paste0(file_path, '/TimeProvince.csv'), stringsAsFactors = FALSE)
weather = read.csv(paste0(file_path, '/Weather.csv'), stringsAsFactors = FALSE)
timeage = read.csv(paste0(file_path, '/Timeage.csv'), stringsAsFactors = FALSE)
View(timeage)
timeage_df = timeage[,c(-3,-5)]
View(timeage_df)
corr(timeage_df)
timeage_df$date = as.Date(timeage_df$date)
corr(timeage_df)
cor(timeage_df)
View(timeage_df)
View(timeage_df)
View(timeage)
timeage_df = timeage[,c(-2,-5)]
timeage_df$date = as.Date(timeage_df$date)
rownames(timeage_df) = timeage_df$date
rownames(timeage_df)
timeage_df$date
rownames(timeage_df) = timeage_df$date
timeage_df = timeage[,c(-2,-5)]
timeage_df$date = as.Date(timeage_df$date)
rownames(timeage_df) = timeage_df$date
timeage_df$date
timeage_df = timeage[,c(-2,-5)]
#timeage_df$date = as.Date(timeage_df$date)
rownames(timeage_df) = timeage_df$date
timeage_df = timeage[,c(-2,-5)]
View(timeage_df)
timeage_df$date
rownames(timeage_df)
#timeage_df$date = as.Date(timeage_df$date)
rownames(timeage_df) = timeage_df$date
timeage = read.csv(paste0(file_path, '/Timeage.csv'), stringsAsFactors = FALSE, row.names=NULL)
timeage_df = timeage[,c(-2,-5)]
#timeage_df$date = as.Date(timeage_df$date)
rownames(timeage_df) = timeage_df$date
timeage_df = timeage[,c(-2,-5)]
View(timeage_df)
timeage_df = timeage[,c(-2,-5)]
#timeage_df$date = as.Date(timeage_df$date)
rownames(timeage_df) = 3
#timeage_df$date = as.Date(timeage_df$date)
rownames(timeage_df) = 3
rownames(timeage_df)
set.seed(4011)
file_path = "C:/Users/cheng/OneDrive/Desktop/hw/STAT4011/STAT4011/dataset"
case =  read.csv(paste0(file_path, '/Time.csv'))
policy = read.csv(paste0(file_path, '/Policy.csv'))
search_trend = read.csv(paste0(file_path, '/SearchTrend.csv'))
province = read.csv(paste0(file_path, '/TimeProvince.csv'), stringsAsFactors = FALSE)
weather = read.csv(paste0(file_path, '/Weather.csv'), stringsAsFactors = FALSE)
timeage = read.csv(paste0(file_path, '/Timeage.csv'), stringsAsFactors = FALSE, row.names=NULL)
timeage_df = timeage[,c(-2,-5)]
#timeage_df$date = as.Date(timeage_df$date)
rownames(timeage_df) = 3
#timeage_df$date = as.Date(timeage_df$date)
rownames(timeage_df) = timeage_df$date
length(timeage_df$date)
rownames(timeage_df)
#timeage_df$date = as.Date(timeage_df$date)
length(rownames(timeage_df)) = length(timeage_df$date)
cor(timeage_df[2:3])
timeage_df = timeage[,c(-2,-5)]
timeage_df$date = as.Date(timeage_df$date)
normalize <- function(x)
{
return((x- mean(x)) /sd(x))
}
pro_stand_df = apply(pro_df[,2:ncol(pro_df)], 2, normalize)
pro_stand_df = data.frame(pro_df[,1], pro_stand_df)
pro_stand_df[,1] = anytime::anydate(pro_stand_df[,1])
colnames(pro_stand_df)[1] = 'date'
df = pro_stand_df
ggplot() +
geom_line(data = df, aes(x = date, y = Busan, color = 'Busan')) +
geom_line(data = df, aes(x = date, y = Chungcheongbuk, color = 'Chungcheongbuk'))+
geom_line(data = df, aes(x = date, y = Chungcheongnam, color = 'Chungcheongnam'))+
geom_line(data = df, aes(x = date, y = Daegu, color = 'Daegu'))+
geom_line(data = df, aes(x = date, y = Daejeon, color = 'Daejeon'))+
geom_line(data = df, aes(x = date, y = Gangwon, color = 'Gangwon'))+
geom_line(data = df, aes(x = date, y = Gwangju, color = 'Gwangju'))+
geom_line(data = df, aes(x = date, y = Gyeonggi, color = 'Gyeonggi'))+
geom_line(data = df, aes(x = date, y = Gyeongsangbuk, color = 'Gyeongsangbuk'))+
geom_line(data = df, aes(x = date, y = Gyeongsangnam, color = 'Gyeongsangnam'))+
geom_line(data = df, aes(x = date, y = Incheon, color = 'Incheon'))+
geom_line(data = df, aes(x = date, y = Jeju, color = 'Jeju'))+
geom_line(data = df, aes(x = date, y = Jeollabuk, color = 'Jeollabuk'))+
geom_line(data = df, aes(x = date, y = Jeollanam, color = 'Jeollanam'))+
geom_line(data = df, aes(x = date, y = Sejong, color = 'Sejong'))+
geom_line(data = df, aes(x = date, y = Seoul, color = 'Seoul'))+
geom_line(data = df, aes(x = date, y = Ulsan, color = 'Jeollabuk'))+
ylab('')
ggplot() +
geom_line(data = df, aes(x = date, y = Seoul, color = 'Seoul'))
corr_pro = cor(pro_df[,2:ncol(pro_df)])
View(corr_pro)
View(pro_df)
View(pro_df)
ggplot() +
geom_line(data = df, aes(x = date, y = Seoul, color = 'Seoul'))+
geom_line(data = df, aes(x = date, y = Daegu, color = 'Daegu'))+
geom_line(data = df, aes(x = date, y = Gyeonggi, color = 'Gyeonggi'))
geom_line(data = df, aes(x = date, y = Gyeongsangbuk, color = 'Gyeongsangbuk'))
df = pro_df
ggplot() +
geom_line(data = df, aes(x = date, y = Seoul, color = 'Seoul'))+
geom_line(data = df, aes(x = date, y = Daegu, color = 'Daegu'))+
geom_line(data = df, aes(x = date, y = Gyeonggi, color = 'Gyeonggi'))
geom_line(data = df, aes(x = date, y = Gyeongsangbuk, color = 'Gyeongsangbuk'))
df = pro_stand_df
ggplot() +
geom_line(data = df, aes(x = date, y = Seoul, color = 'Seoul'))+
geom_line(data = df, aes(x = date, y = Daegu, color = 'Daegu'))+
geom_line(data = df, aes(x = date, y = Gyeonggi, color = 'Gyeonggi'))
geom_line(data = df, aes(x = date, y = Gyeongsangbuk, color = 'Gyeongsangbuk'))
df = pro_df
ggplot() +
geom_line(data = df, aes(x = date, y = Seoul, color = 'Seoul'))+
geom_line(data = df, aes(x = date, y = Daegu, color = 'Daegu'))+
geom_line(data = df, aes(x = date, y = Gyeonggi, color = 'Gyeonggi'))+
geom_line(data = df, aes(x = date, y = Gyeongsangbuk, color = 'Gyeongsangbuk'))
df = pro_stand_df
ggplot() +
geom_line(data = df, aes(x = date, y = Seoul, color = 'Seoul'))+
geom_line(data = df, aes(x = date, y = Daegu, color = 'Daegu'))+
geom_line(data = df, aes(x = date, y = Gyeonggi, color = 'Gyeonggi'))+
geom_line(data = df, aes(x = date, y = Gyeongsangbuk, color = 'Gyeongsangbuk'))
View(policy)
corr_4 = data.frame(pro_df$Seoul, pro_df$Daegu, pro_df$Gyeonggi, pro_df$Gyeongsangbuk)
corr_4_df = data.frame(pro_df$Seoul, pro_df$Daegu, pro_df$Gyeonggi, pro_df$Gyeongsangbuk)
corr_4 = cor(corr_4_df)
View(corr_4)
pro_df$Seoul
corr_4_df = data.frame(pro_df$Seoul, pro_df$Daegu, pro_df$Gyeonggi, pro_df$Gyeongsangbuk)
colnames(corr_4_df) = c('Seoul', 'Daegu', 'Gyeonggi', 'Gyeongsangbuk')
corr_4 = cor(corr_4_df)
View(corr_4)
